apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "projectapp.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "projectapp.common.labels" . | nindent 4 }}
    {{- include "projectapp.frontend.selectorLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "projectapp.frontend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "projectapp.frontend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /index.html
              port: http
            initialDelaySeconds: 5
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /index.html
              port: http
            failureThreshold: 1
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: API_URL
            value: "/api"
          volumeMounts:
          - mountPath: /etc/nginx/conf.d # mount nginx-conf volume to /etc/nginx/conf.d
            readOnly: true
            name: {{ include "projectapp.configName" . }}
      volumes:
      - name: {{ include "projectapp.configName" . }}
        configMap:
          name: {{ include "projectapp.configName" . }} # place ConfigMap `nginx-conf` on /etc/nginx/conf.d/default.conf file
          items:
            - key: nginx.conf
              path: default.conf
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
