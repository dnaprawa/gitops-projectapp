apiVersion: apps/v1
kind: Deployment
metadata:
  name: projectapp-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      name: projectapp-backend
  template:
    metadata:
      labels:
        name: projectapp-backend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: backend
        image: k8smaestro/projectapp-backend:2.0
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /live
            port: http
          failureThreshold: 1
          periodSeconds: 10
        resources:
          requests:
            cpu: 100m
            memory: 220Mi
          limits:
            cpu: 100m
            memory: 220Mi
        securityContext: 
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
          procMount: "Default"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: projectapp-frontend-nginx-conf
data:
  nginx.conf: |
    # The identifier Backend is internal to nginx, and used to name this specific upstream
    upstream Backend {
        # service-projectapp-backend is the internal DNS name used by the backend Service inside Kubernetes
        server service-projectapp-backend;
    }

    server {
      listen       8080;
      listen  [::]:8080;
      server_name  localhost;

      location / {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
      }

      location /api {
        # The following statement will proxy traffic to the upstream named Backend
        rewrite ^/api(.*) $1 break;
        proxy_pass http://Backend;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: projectapp-frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      name: projectapp-frontend
  template:
    metadata:
      labels:
        name: projectapp-frontend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
        runAsGroup: 5000
        fsGroup: 5000
      containers:
      - name: frontend
        image: k8smaestro/projectapp-frontend:2.0
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /index.html
            port: http
          initialDelaySeconds: 5
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /index.html
            port: http
          failureThreshold: 1
          periodSeconds: 10
        env:
        - name: API_URL
          value: "/api"
        volumeMounts:
        - mountPath: /etc/nginx/conf.d # mount nginx-conf volume to /etc/nginx/conf.d
          readOnly: true
          name: projectapp-frontend-nginx-conf
        securityContext: 
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
          procMount: "Default"
      volumes:
      - name: projectapp-frontend-nginx-conf
        configMap:
          name: projectapp-frontend-nginx-conf # place ConfigMap `nginx-conf` on /etc/nginx/conf.d/default.conf file
          items:
            - key: nginx.conf
              path: default.conf
